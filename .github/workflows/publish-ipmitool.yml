name: Build and Publish ipmitool

on:
  push:
    branches:
    - main
    paths:
    - 'Dockerfile.ipmitool'
    - '.github/workflows/publish-ipmitool.yml'
  pull_request:
    paths:
    - 'Dockerfile.ipmitool'
    - '.github/workflows/publish-ipmitool.yml'
  workflow_dispatch:
    inputs:
      push_latest:
        description: 'Push latest tag'
        required: false
        default: true
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/ipmitool

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=latest,enable=${{ github.event_name == 'workflow_dispatch' && inputs.push_latest == 'true' || github.ref == 'refs/heads/main' }}
          type=sha,prefix={{branch}}-
          type=ref,event=pr
        labels: |
          org.opencontainers.image.title=ipmitool
          org.opencontainers.image.description=Statically compiled ipmitool binary for IPMI management
          org.opencontainers.image.source=https://github.com/ipmitool/ipmitool

    - name: Build and push multi-arch image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile.ipmitool
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        provenance: false
        sbom: false

    - name: Test binary (amd64)
      if: github.event_name != 'pull_request'
      run: |
        docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest -V

    - name: Display image info
      if: github.event_name != 'pull_request'
      run: |
        echo "âœ… Image built and pushed successfully!"
        echo ""
        echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
        echo "Tags: ${{ steps.meta.outputs.tags }}"
        echo ""
        echo "Pull and run:"
        echo "  docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest -V"
        echo ""
        echo "Extract binary:"
        echo "  docker create --name ipmitool ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
        echo "  docker cp ipmitool:/ipmitool ./ipmitool"
        echo "  docker rm ipmitool"
