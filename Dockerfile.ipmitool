# Multi-stage build for statically compiled ipmitool
FROM alpine:3.20 AS builder

# Install build dependencies
RUN apk add --no-cache \
    git \
    autoconf \
    automake \
    libtool \
    make \
    gcc \
    g++ \
    musl-dev \
    openssl-dev \
    openssl-libs-static \
    readline-dev \
    readline-static \
    ncurses-static \
    ncurses-dev \
    zlib-static \
    file

# Clone ipmitool source
WORKDIR /build
RUN git clone https://github.com/ipmitool/ipmitool.git .

# Build static binary
# The trick is that libtool's -static flag doesn't actually create static binaries,
# it just means "don't make dynamic libraries". We need to use -all-static for that.
RUN ./bootstrap && \
    ./configure \
    --enable-static \
    --disable-shared \
    --prefix=/usr && \
    make -j$(nproc) && \
    cd src && \
    /bin/sh ../libtool --silent --tag=CC --mode=link gcc \
        -fno-strict-aliasing -Wreturn-type -all-static \
        -o ipmitool.static \
        ipmitool.o ipmishell.o ../lib/libipmitool.la plugins/libintf.la \
        -lcrypto -lreadline -lncurses && \
    strip ipmitool.static

# Verify it's static
RUN file src/ipmitool.static && \
    ldd src/ipmitool.static 2>&1 || true

# Final minimal image with just the binary
FROM scratch

COPY --from=builder /build/src/ipmitool.static /ipmitool

ENTRYPOINT ["/ipmitool"]
